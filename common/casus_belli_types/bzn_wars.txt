slave_raid_cb = {
	group = conquest

	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character = {
		scope:attacker = {
			NOT = {
				government_has_flag = government_is_landless_adventurer
			}
			culture = { has_cultural_parameter = slave_raid_cb_active }
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}

		scope:defender = {
			is_independent_ruler = yes
		}
	}

	cost = {
		prestige = {
			add = {
				value = 100
				desc = CB_BASE_COST
			}
			multiply = common_cb_piety_cost_multiplier
		}
	}

	should_invalidate = {
		OR = {
			AND = {	#A formal flowery war only invalidates if neither side is an interested participant.
				scope:attacker.culture = {
					NOT = { has_cultural_parameter = slave_raid_cb_active }
				}
				scope:defender.culture = {
					NOT = { has_cultural_parameter = slave_raid_cb_active }
				}
			}
		}
	}

	on_invalidated_desc = { 
	}

	on_invalidated = {
		
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		desc = slave_raid_cb_victory_desc
	}

	on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:attacker = {
			if = {	#If the attacker enjoys human sacrifice, then this was sacred.
				limit = {
					faith = { has_doctrine_parameter = human_sacrifice_active }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_county }
					add_piety = { value = minor_piety_gain }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_duchy }
					add_piety = { value = medium_piety_gain }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_kingdom }
					add_piety = { value = major_piety_gain }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_empire }
					add_piety = { value = massive_piety_gain }
				}
			}
			else = {	#If the attacker has since stopped enjoying human sacrifice, then the war was just prestigious.
				if = {
					limit = { scope:defender.primary_title.tier = tier_county }
					add_prestige = { value = minor_prestige_gain }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_duchy }
					add_prestige = { value = medium_prestige_gain }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_kingdom }
					add_prestige = { value = major_prestige_gain }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_empire }
					add_prestige = { value = massive_prestige_gain }
				}
			}
		}
		scope:defender = {
			if = {	#If the defender shares the faith of the attacker, then this war was sacred for them too.
				limit = {
					faith = { this = scope:attacker.faith }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_county }
					add_piety = {
						value = minor_piety_gain
						multiply = 0.75
					}
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_duchy }
					add_piety = {
						value = medium_piety_gain
						multiply = 0.75
					}
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_kingdom }
					add_piety = {
						value = major_piety_gain
						multiply = 0.75
					}
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_empire }
					add_piety = {
						value = massive_piety_gain
						multiply = 0.75
					}
				}
			}
			else = {	#Otherwise, the war just sucked.
				if = {
					limit = { scope:defender.primary_title.tier = tier_county }
					add_prestige = { value = minor_prestige_loss }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_duchy }
					add_prestige = { value = medium_prestige_loss }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_kingdom }
					add_prestige = { value = major_prestige_loss }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_empire }
					add_prestige = { value = massive_prestige_loss }
				}
			}
		}
		scope:attacker = {	#If the attacker has the appropriate tenet, grab some suitable courtiers from the defender.
			if = {
				limit = {
					culture = { has_cultural_parameter = slave_raid_cb_active }
				}
				custom_tooltip = slave_raid_cb_prisoners.tt_attacker
				hidden_effect = {
					scope:defender = {
						every_courtier_or_guest = { add_to_list = potential_captives_list }
						random_in_list = {	#Nab someone related to the defender, preferring tangentials.
							list = potential_captives_list
							limit = {
								OR = {
									AND = {
										has_dynasty = yes
										dynasty = scope:defender.dynasty
									}
									is_consort_of = scope:defender
								}
							}
							alternative_limit = { always = yes }
							weight = {
								base = 1
								modifier = {
									add = 50
									NOT = { is_close_family_of = scope:defender }
								}
								modifier = {
									add = 25
									NOT = { is_extended_family_of = scope:defender }
								}
							}
							add_to_list = definite_captives_list
							save_temporary_scope_as = future_captive
								scope:attacker = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
						}
						random_in_list = {	#Always try to grab a second person.
							list = potential_captives_list
							limit = {
								NOT = { is_in_list = definite_captives_list }
							}
							weight = {
								base = 10
								modifier = {
									add = 100
									NOT = {
										any_claim = {
											useful_courtier_or_guest_claim_trigger = { RULER = scope:defender }
										}
									}
								}
								modifier = {
									add = 50
									martial >= high_skill_rating
								}
								modifier = {
									add = 50
									prowess >= high_skill_rating
								}
								modifier = {
									add = 25
									NOT = { is_close_or_extended_family_of = scope:defender }
								}
							}
							add_to_list = definite_captives_list
							save_temporary_scope_as = future_captive
								scope:attacker = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
						}
						random_in_list = {	#Always try to grab a third person.
							list = potential_captives_list
							limit = {
								NOT = { is_in_list = definite_captives_list }
							}
							weight = {
								base = 10
								modifier = {
									add = 50
									martial >= high_skill_rating
								}
								modifier = {
									add = 50
									prowess >= high_skill_rating
								}
								modifier = {
									add = 25
									NOT = { is_close_or_extended_family_of = scope:defender }
								}
							}
							add_to_list = definite_captives_list
							save_temporary_scope_as = future_captive
								scope:attacker = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
						}
						if = {	#If at least duchy-tier, try to grab a fourth person.
							limit = { primary_title.tier >= tier_duchy }
							random_in_list = {
								list = potential_captives_list
								limit = {
									NOT = { is_in_list = definite_captives_list }
								}
								weight = {
								base = 10
								modifier = {
									add = 50
									martial >= high_skill_rating
								}
								modifier = {
									add = 50
									prowess >= high_skill_rating
								}
								modifier = {
									add = 25
									NOT = { is_close_or_extended_family_of = scope:defender }
								}
								}
								add_to_list = definite_captives_list
								save_temporary_scope_as = future_captive
								scope:attacker = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
							}
						}
						if = {	#If at least kingdom-tier, try to grab a fifth person.
							limit = { primary_title.tier >= tier_kingdom }
							random_in_list = {
								list = potential_captives_list
								limit = {
									NOT = { is_in_list = definite_captives_list }
								}
								weight = {
								base = 10
								modifier = {
									add = 50
									martial >= high_skill_rating
								}
								modifier = {
									add = 50
									prowess >= high_skill_rating
								}
								modifier = {
									add = 25
									NOT = { is_close_or_extended_family_of = scope:defender }
								}
								}
								add_to_list = definite_captives_list
								save_temporary_scope_as = future_captive
								scope:attacker = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
							}
						}
					}
				}
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

	}

	on_white_peace_desc = {
		desc = slave_raid_cb_white_peace_desc
	}

	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		scope:attacker = { 
			show_pow_release_message_effect = yes
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}
		scope:attacker = {	#Piety loss for the attacker if appropriate, otherwise prestige loss.
			if = {
				limit = {
					faith = { has_doctrine_parameter = human_sacrifice_active }
				}
				add_piety = religious_cb_piety_white_peace
			}
			else = {
				add_prestige = {
					value = medium_prestige_loss
				}
			}
		}



		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not important as the scales are identical
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes

	}

	on_defeat_desc = {
		desc = slave_raid_cb_defeat_desc
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:attacker = {
			if = {	#If the attacker shares the faith of the defender, and both still enjoy human sacrifice, then this war was at least sacred for them.
				limit = {
					faith = {
						this = scope:defender.faith
						has_doctrine_parameter = human_sacrifice_active
					}
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_county }
					add_piety = {
						value = minor_piety_gain
						multiply = 0.75
					}
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_duchy }
					add_piety = {
						value = medium_piety_gain
						multiply = 0.75
					 }
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_kingdom }
					add_piety = {
						value = major_piety_gain
						multiply = 0.75
					}
				}
				if = {
					limit = { scope:defender.primary_title.tier = tier_empire }
					add_piety = {
						value = massive_piety_gain
						multiply = 0.75
					}
				}
			}
			else = {	#Otherwise, the war just sucked.
				if = {
					limit = { scope:attacker.primary_title.tier = tier_county }
					add_prestige = { value = minor_prestige_loss }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_duchy }
					add_prestige = { value = medium_prestige_loss }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_kingdom }
					add_prestige = { value = major_prestige_loss }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_empire }
					add_prestige = { value = massive_prestige_loss }
				}
			}
		}
		scope:defender = {
			if = {	#If the defender has the same faith as the attacker, and that faith still enjoys human sacrifice, then this was sacred.
				limit = {
					faith = {
						this = scope:attacker.faith
						has_doctrine_parameter = human_sacrifice_active
					}
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_county }
					add_piety = { value = minor_piety_gain }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_duchy }
					add_piety = { value = medium_piety_gain }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_kingdom }
					add_piety = { value = major_piety_gain }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_empire }
					add_piety = { value = massive_piety_gain }
				}
			}
			else = {	#Otherwise, the war was just prestigious.
				if = {
					limit = { scope:attacker.primary_title.tier = tier_county }
					add_prestige = { value = minor_prestige_gain }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_duchy }
					add_prestige = { value = medium_prestige_gain }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_kingdom }
					add_prestige = { value = major_prestige_gain }
				}
				if = {
					limit = { scope:attacker.primary_title.tier = tier_empire }
					add_prestige = { value = massive_prestige_gain }
				}
			}
		}
		scope:defender = {	#If the defender has the appropriate tenet, and doesn't already have sacrificial victims, grab some suitable courtiers from the attacker.
			if = {
				limit = {
					faith = { has_doctrine_parameter = human_sacrifice_active }
					NOT = {	#Must not have any leftover sacrificial prisoners, lest the defender get borked sacrifice-accounting events.
						any_prisoner = { has_character_modifier = designated_human_sacrifice_modifier }
					}
				}
				custom_tooltip = flowery_war_cb_prisoners.tt_defender
				hidden_effect = {
					scope:attacker = {
						every_courtier_or_guest = { add_to_list = potential_captives_list }
						random_in_list = {	#Nab someone related to the attacker, preferring tangentials.
							list = potential_captives_list
							limit = {
								OR = {
									AND = {
										has_dynasty = yes
										dynasty = scope:attacker.dynasty
									}
									is_consort_of = scope:attacker
								}
							}
							alternative_limit = { always = yes }
							weight = {
								base = 1
								modifier = {
									add = 25
									NOT = { is_close_family_of = scope:attacker }
								}
								modifier = {
									add = 15
									NOT = { is_extended_family_of = scope:attacker }
								}
							}
							add_to_list = definite_captives_list
							save_temporary_scope_as = future_captive
								scope:defender = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
						}
						random_in_list = {	#Always try to grab a second person.
							list = potential_captives_list
							limit = {
								NOT = { is_in_list = definite_captives_list }
							}
							weight = {
								base = 1
								modifier = {
									add = 40
									NOT = {
										any_claim = {
											useful_courtier_or_guest_claim_trigger = { RULER = scope:attacker }
										}
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_chancellor_trigger = { COURT_OWNER = scope:attacker }
										diplomacy >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_marshal_trigger = { COURT_OWNER = scope:attacker }
										martial >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_steward_trigger = { COURT_OWNER = scope:attacker }
										stewardship >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_spymaster_trigger = { COURT_OWNER = scope:attacker }
										intrigue >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NOT = { learning >= high_skill_rating }
								}
								modifier = {
									add = 10
									NOT = {	prowess >= high_skill_rating }
								}
								modifier = {
									add = 50
									NOT = { is_close_or_extended_family_of = scope:defender }
								}
							}
							add_to_list = definite_captives_list
							save_temporary_scope_as = future_captive
								scope:defender = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
						}
						random_in_list = {	#Always try to grab a third person.
							list = potential_captives_list
							limit = {
								NOT = { is_in_list = definite_captives_list }
							}
							weight = {
								base = 1
								modifier = {
									add = 40
									NOT = {
										any_claim = {
											useful_courtier_or_guest_claim_trigger = { RULER = scope:attacker }
										}
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_chancellor_trigger = { COURT_OWNER = scope:attacker }
										diplomacy >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_marshal_trigger = { COURT_OWNER = scope:attacker }
										martial >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_steward_trigger = { COURT_OWNER = scope:attacker }
										stewardship >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NAND = {
										can_be_spymaster_trigger = { COURT_OWNER = scope:attacker }
										intrigue >= high_skill_rating
									}
								}
								modifier = {
									add = 10
									NOT = { learning >= high_skill_rating }
								}
								modifier = {
									add = 10
									NOT = {	prowess >= high_skill_rating }
								}
								modifier = {
									add = 50
									NOT = { is_close_or_extended_family_of = scope:defender }
								}
							}
							add_to_list = definite_captives_list
							save_temporary_scope_as = future_captive
								scope:defender = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
						}
						if = {	#If at least duchy-tier, try to grab a fourth person.
							limit = { primary_title.tier >= tier_duchy }
							random_in_list = {
								list = potential_captives_list
								limit = {
									NOT = { is_in_list = definite_captives_list }
								}
								weight = {
									base = 1
									modifier = {
										add = 40
										NOT = {
											any_claim = {
												useful_courtier_or_guest_claim_trigger = { RULER = scope:attacker }
											}
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_chancellor_trigger = { COURT_OWNER = scope:attacker }
											diplomacy >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_marshal_trigger = { COURT_OWNER = scope:attacker }
											martial >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_steward_trigger = { COURT_OWNER = scope:attacker }
											stewardship >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_spymaster_trigger = { COURT_OWNER = scope:attacker }
											intrigue >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NOT = { learning >= high_skill_rating }
									}
									modifier = {
										add = 10
										NOT = { prowess >= high_skill_rating }
									}
								}
								add_to_list = definite_captives_list
								save_temporary_scope_as = future_captive
								scope:defender = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
							}
						}
						if = {	#If at least kingdom-tier, try to grab a fifth person.
							limit = { primary_title.tier >= tier_kingdom }
							random_in_list = {
								list = potential_captives_list
								limit = {
									NOT = { is_in_list = definite_captives_list }
								}
								weight = {
									base = 1
									modifier = {
										add = 40
										NOT = {
											any_claim = {
												useful_courtier_or_guest_claim_trigger = { RULER = scope:attacker }
											}
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_chancellor_trigger = { COURT_OWNER = scope:attacker }
											diplomacy >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_marshal_trigger = { COURT_OWNER = scope:attacker }
											martial >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_steward_trigger = { COURT_OWNER = scope:attacker }
											stewardship >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NAND = {
											can_be_spymaster_trigger = { COURT_OWNER = scope:attacker }
											intrigue >= high_skill_rating
										}
									}
									modifier = {
										add = 10
										NOT = { learning >= high_skill_rating }
									}
									modifier = {
										add = 10
										NOT = { prowess >= high_skill_rating }
									}
								}
								add_to_list = definite_captives_list
								save_temporary_scope_as = future_captive
								scope:defender = {
									imprison = {
										target = scope:future_captive
										type = dungeon
									}
								}
							}
						}
					}
					every_in_list = {
						list = definite_captives_list
						add_character_modifier = {
							modifier = designated_human_sacrifice_modifier
							years = 2
						}
					}
					trigger_event = {
						id = human_sacrifice.0001
						years = 2
					}
				}
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "SLAVE_RAID_CB_NAME"
	war_name_base = "SLAVE_RAID_WAR_NAME_BASE"
	cb_name = "SLAVE_RAID_CB_NAME"
	interface_priority = 80

	ticking_war_score_targets_entire_realm = yes
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.01
	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 50
	attacker_score_from_battles_scale = 200
	defender_score_from_battles_scale = 200

	max_attacker_score_from_battles = 200
	max_defender_score_from_battles = 200

	max_ai_diplo_distance_to_title = 500
	
	ai_score = {
		value = raid_for_captives_ai_score_value
	}
}

